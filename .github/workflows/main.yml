# Build for submitr

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: TEST WITH PYTHON ${{ matrix.python_version }}

    # The type of runner that the job will run on
    # experimental # runs-on: ubuntu-22.04
    runs-on: macos-13
    # experimental end
    strategy:
      matrix:
        python_version: ['3.9', '3.10', '3.11']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}

      - name: INSTALL DEPENDENCIES
        run: |
          make configure
          
      - name: BUILD
        run: |
          poetry install
          poetry run flake8 submitr

          echo "Installing docker."
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker

          echo "Installing colima."
          brew install colima

          echo "Starting colima."
          colima start

          echo "Waiting for docker get up/running. This can take over 2 minutes ..."
          while (! docker stats --no-stream ); do
            echo "Waiting for docker to start ..."
            sleep 3
          done
          echo "Docker now seems to be up/running."

          # echo "Preparing docker."
          # sudo /Applications/Docker.app/Contents/MacOS/Docker\ Desktop.app/Contents/MacOS/Docker\ Desktop --unattended --install-privileged-components
          # echo "Starting docker."
          # open -a /Applications/Docker.app --args --unattended --accept-license
          # echo "Waiting for docker get up/running. This can take over 2 minutes ..."
          # while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done
          # echo "Docker now seems to be up/running."

          echo "Building Linux binaries."
          make exe-linux
          echo "Done building Linux binaries."
      
      - name: CI
        run: |
          poetry run coverage run --source submitr -m pytest -vv -m "not integration"

      - name: COVERALLS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # For testing, use the oldest allowable version of Python to be sure we're not using features added later
        if: ${{ matrix.python_version == '3.7' }}
        run: |
          pip install coveralls
          poetry run coveralls --service=github
