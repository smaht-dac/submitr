name: BINARY RELEASE

permissions:
  contents: write

on:
  push:
    # Only run this workflow to create binaries when a non-beta tag is created.
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  release:
    runs-on: macos-13

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Sanity Checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name=${{ github.ref_name }}
          if [[ $GITHUB_REF =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "Releasing binary artifacts for tag: ${tag_name} ..."
          else
            echo "Release tag is not for a non-beta. No action taken."
            exit 1
          fi

      - name: Build MacOS Binary
        with:
          python-version: "3.11"
        run: |
          echo "Building MacOS binaries."
          make exe-macos
          # make exe-macos-for-ga
          echo "Done building MacOS binaries."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux Binaries
        run: |
          echo "Building Linux binaries."
          echo "Installing docker for building Linux binaries."
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
          echo "Installing colima for running docker."
          brew install colima
          echo "Starting docker via colima."
          # Was sometimes timing out with many of these messages after column start:
          # - Waiting for the essential requirement 1 of 4: "ssh"
          # Changed to colima start --arch x86_64 and not so much but unclear if it really mattered.
          colima start --arch x86_64
          echo "Waiting for docker come up."
          while (! docker stats --no-stream ); do
            sleep 3
          done
          echo "Docker is up/running."
          make exe-linux
          echo "Done building Linux binaries."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Binaries
        run: |
          tag_name=${{ github.ref_name }}
          echo "Releasing binary artifacts for tag: ${tag_name}"
          gh release upload ${{ github.ref_name }} binaries/submitr-macos --clobber
          gh release upload ${{ github.ref_name }} binaries/submitr-linux-x86 --clobber
          gh release upload ${{ github.ref_name }} binaries/submitr-linux-arm --clobber
          echo "Done releasing binary artifacts for tag: ${tag_name}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
