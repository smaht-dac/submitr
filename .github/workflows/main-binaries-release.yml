name: BINARY RELEASE

permissions:
  contents: write

on:
# push:
#   branches: [ pyinstaller-experiment-20240611 ]
  push:
    # Only run this workflow to create binaries when a non-beta tag is created.
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:

  sanity-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Sanity Checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "GitHub runner architecture is: `arch`"
          uname -a
          tag_name=${{ github.ref_name }}
          if [[ $GITHUB_REF =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "Releasing binary artifacts for tag: ${tag_name} ..."
          else
            echo "Release tag is not for a non-beta. No action taken. NOT (DEBUGGING)"
            exit 1
          fi

  build-macos-arm:
    runs-on: macos-14
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Build MacOS Binary
        run: |
          echo "Building MacOS binaries."
          make exe-macos
          echo "Done building MacOS binaries."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload MacOS Binary (arm)
        run: |
          tag_name=${{ github.ref_name }}
          echo "Releasing MacOS (x86) binary artifact for tag: ${tag_name}"
          # gh release upload ${{ github.ref_name }} binaries/submitr-macos-arm --clobber
          gh release upload ${{ needs.create-release.outputs.release_id }} binaries/submitr-macos-arm --repo ${{ github.repository }}
          echo "Done releasing MacOS (x86) binary artifact for tag: ${tag_name}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-i86-and-linux:
    runs-on: macos-13
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Build Linux Binaries
        run: |
          echo "Building Linux binaries."
          echo "Installing docker for building Linux binaries."
          HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 brew install --cask docker
          echo "Installing colima for running docker."
          HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 brew install colima
          echo "Starting docker via colima."
          # No idea why this works with --arch x86_64 but not --arch aarch64 (default)
          # as we are running on macos-14 which is an Mn processor (arm64).
          colima start --arch x86_64
          echo "Waiting for docker come up."
          while (! docker stats --no-stream ); do
            sleep 3
          done
          echo "Docker is up/running."
          echo "Building Linux arm64 binary."
          make exe-linux-arm
          echo "Building Linux x86_64 binary."
          make exe-linux-x86
          echo "Done building Linux binaries."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Binaries
        run: |
          tag_name=${{ github.ref_name }}
          echo "Releasing binary MacOS (x86) and Linux artifacts for tag: ${tag_name}"
          # gh release upload ${{ github.ref_name }} binaries/submitr-macos-x86 --clobber
          # gh release upload ${{ github.ref_name }} binaries/submitr-linux-x86 --clobber
          # gh release upload ${{ github.ref_name }} binaries/submitr-linux-arm --clobber
          gh release upload ${{ needs.create-release.outputs.release_id }} binaries/submitr-macos-x86 --repo ${{ github.repository }}
          gh release upload ${{ needs.create-release.outputs.release_id }} binaries/submitr-linux-x86 --repo ${{ github.repository }}
          gh release upload ${{ needs.create-release.outputs.release_id }} binaries/submitr-linux-arm --repo ${{ github.repository }}
          echo "Done releasing binary MacOS (x86) and Linux artifacts for tag: ${tag_name}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.release_id }}
    steps:
      - uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
